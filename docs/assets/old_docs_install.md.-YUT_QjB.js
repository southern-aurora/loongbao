import{_ as s,c as a,o as i,V as t}from"./chunks/framework.ajfdQ9vp.js";const g=JSON.parse('{"title":"Install","description":"","frontmatter":{"title":"Install"},"headers":[],"relativePath":"old/docs/install.md","filePath":"old/docs/install.md"}'),e={name:"old/docs/install.md"},n=t(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><p>使用 Loongbao 开始一个新的工程。</p><h2 id="先决条件" tabindex="-1">先决条件 <a class="header-anchor" href="#先决条件" aria-label="Permalink to &quot;先决条件&quot;">​</a></h2><h3 id="bun" tabindex="-1">Bun <a class="header-anchor" href="#bun" aria-label="Permalink to &quot;Bun&quot;">​</a></h3><p>首先，您需要安装 Bun。Bun 是一个极速的 JavaScript 运行时，与 Node.js 兼容。您可以在<a href="https://bun.sh/docs/installation" target="_blank" rel="noreferrer">此处</a>找到安装方法。</p><p>考虑到 Bun 尚未完全支持 Windows 系统，如果您使用的是 Windows 系统，我建议您使用<a href="https://learn.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noreferrer">WSL2</a>来进行开发。</p><p>您可以通过安装 Visual Studio Code 的<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl" target="_blank" rel="noreferrer">WSL 插件</a>，直接打开 WSL2 中的目录，并在其中进行开发。</p><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><p>想要开始使用 Loongbao，只需要运行下面的命令即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create southern-aurora/create-loongbao loongbao</span></span></code></pre></div><p>在你的 Loongbao 创建成功后进入目录，执行 <code>co i</code> 命令以安装所需的依赖项。安装完成后，您可以运行 <code>co dev</code> 命令启动开发服务器。</p><p>一旦开发服务器成功启动，您便可以访问服务了，默认端口为 <code>9000</code>。可以尝试使用下面的命令来快速访问默认生成的示例接口：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --location</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST &#39;http://localhost:9000/hello-world/say&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --data-raw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;by&quot;:&quot;loongbao&quot;}&#39;</span></span></code></pre></div><p>您将会得到如下的响应：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;youSay&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world! (by loongbao)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>刚刚访问的接口所对应的文件位于 <code>/src/app/hello-world/api.ts</code>，您可以随意编辑它。</p>`,16),l=[n];function o(h,p,r,d,c,k){return i(),a("div",null,l)}const b=s(e,[["render",o]]);export{g as __pageData,b as default};
